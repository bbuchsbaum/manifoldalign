% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cone_align.R
\name{cone_align.list}
\alias{cone_align.list}
\title{CONE-Align for List of Feature Matrices}
\usage{
\method{cone_align}{list}(
  data,
  preproc = center(),
  ncomp = 10,
  sigma = 0.73,
  lambda = 0.1,
  use_laplacian = TRUE,
  solver = c("linear", "auction"),
  max_iter = 30,
  tol = 0.01,
  knn = NULL,
  ...
)
}
\arguments{
\item{data}{A list containing exactly two matrices representing node features
for each graph domain. Each matrix should have format: nodes x features.}

\item{preproc}{Preprocessing function to apply to the data (default: center())}

\item{ncomp}{Number of embedding dimensions (default: 10)}

\item{sigma}{Diffusion parameter for graph construction (default: 0.73)}

\item{lambda}{Regularization parameter for numerical stability (default: 0.1)}

\item{use_laplacian}{Whether to use Laplacian normalization (default: TRUE)}

\item{solver}{Assignment algorithm: "linear" for exact assignment (default), 
"auction" for large-scale approximation}

\item{max_iter}{Maximum number of iterations (default: 30)}

\item{tol}{Convergence tolerance for assignment changes (default: 0.01)}

\item{knn}{Number of nearest neighbors for graph construction (default: adaptive)}

\item{...}{Additional arguments (currently unused)}
}
\value{
A multiblock_biprojector object containing the CONE-Align results
}
\description{
Performs CONE-Align on a list containing exactly two feature matrices.
This provides a simplified interface for direct matrix input without
requiring hyperdesign object construction.
}
\examples{
\donttest{
# Simple example with two feature matrices
set.seed(123)
X1 <- matrix(rnorm(100), 50, 2)  # 50 nodes, 2 features
X2 <- matrix(rnorm(100), 50, 2)  # 50 nodes, 2 features

# Run CONE-Align directly on matrices
result <- cone_align(list(X1, X2), ncomp = 5)

# Access results
assignments <- result$assignment
embeddings <- result$s
}

}
