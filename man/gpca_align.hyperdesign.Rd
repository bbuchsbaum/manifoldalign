% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpca_align.R
\name{gpca_align.hyperdesign}
\alias{gpca_align.hyperdesign}
\title{Generalized PCA Alignment for Hyperdesign Data}
\usage{
gpca_align.hyperdesign(
  data,
  y,
  preproc = center(),
  ncomp = 2,
  simfun = neighborweights::binary_label_matrix,
  u = 0.5,
  lambda = 0.1,
  row_metric_scale = 1
)
}
\arguments{
\item{data}{A hyperdesign object containing multiple data domains}

\item{y}{Name of the label variable to use for alignment}

\item{preproc}{Preprocessing function to apply to the data (default: center())}

\item{ncomp}{Number of components to extract (default: 2)}

\item{simfun}{Function to compute similarity between labels (default: neighborweights::binary_label_matrix)}

\item{u}{Trade-off parameter between within-domain and between-domain similarity (0-1, default: 0.5).
Both similarity matrices are normalized to unit Frobenius norm before blending, so u=0.5 
gives truly equal weight to within-domain and between-domain similarities, making this 
parameter interpretable regardless of the scale of the similarity function.}

\item{lambda}{Regularization parameter for matrix conditioning (default: 0.1)}

\item{row_metric_scale}{Scaling factor for the row metric matrix M (default: 1). 
Since GPCA is scale-invariant to M up to a constant, this parameter typically doesn't 
affect results but can be adjusted for numerical reasons if needed.}
}
\value{
A multiblock_biprojector object containing the GPCA alignment
}
\description{
Performs Generalized Principal Component Analysis (GPCA) alignment on hyperdesign data structures.
This method aligns data from multiple domains using a similarity-based approach that balances
within-domain and between-domain relationships.
}
